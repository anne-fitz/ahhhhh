
  
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  
  * {
    margin: 0;
  }

  body {
    font-family: "Henny Penny", serif;
    display: flex;  justify-content: center; /* Centers child horizontally */  
    align-items: center;
  }

  header {
    background-image: linear-gradient(to bottom, rgb(250, 213, 255), rgb(250, 213, 255), rgba(255, 0, 0, 0));
    width: 100%;
    height: 140px;
    margin: 0;
    padding: 0;
    position: fixed;
    z-index: 3;
    top: 0;
    font-family: "Henny Penny", serif;
    font-size: 20px;
    color: rgb(255, 255, 255);
    font-weight: bold;
    text-shadow: 2px 2px 6px black;
    display: flex;
    justify-content: center;
}

@keyframes wiggle {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(5deg); }
  50% { transform: rotate(-5deg); }
  75% { transform: rotate(5deg); }
}

h1 {
    margin: 0px;
    padding-top: 12px;
}

h1:hover {
  animation: wiggle 0.5s ease-in-out;
  cursor: pointer;
}


h4 {
    position: absolute;
    margin: 0px;
    padding-top: 18px;
    padding-left: 12px;
    left: 0;
    top: 0;
}

h4:hover {
    color:rgb(250, 213, 255);
    cursor: pointer;
}

a:visited {
    color: inherit;
}

canvas {
    position: fixed; /* Make canvas cover the viewport */
    top: 0;
    left: 0;
    z-index: -1; /* Place canvas behind content */
    pointer-events: none; /* Allow interactions with content */
  }

footer {
    background-image: linear-gradient(to top, rgb(250, 213, 255), rgb(250, 213, 255), rgba(255, 0, 0, 0));
    width: 100%;
    height: 70px;
    margin: 0;
    padding: 0;
    bottom: 0;
    position: fixed;
    z-index: 1;
}
  
.wrapper {
    width: 90%;
    z-index: 2;
    max-width: 1536px;
    position: fixed;
    bottom: 0; /* positions it at the bottom */
    left: 50%; /* moves the wrapper 50% from the left */
    transform: translateX(-50%); /* pulls it back by 50% of its width to center it */
    height: 50px;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    /* border: solid rgb(250, 213, 255) 5px; */
    mask-image: linear-gradient(
      to right,
      rgba(0, 0, 0, 0),
      rgba(0, 0, 0, 1) 20%,
      rgba(0, 0, 0, 1) 80%,
      rgba(0, 0, 0, 0)
    );
  }
  

  .item {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  @keyframes scrollLeft {
    to {
      left: -200px;
    }
  }
  
  .item {
    width: 120px;
    height: 50px;
    /* border: solid black 2px; */
    border-radius: 3%;
    position: absolute;
    color: rgb(255, 255, 255);
    font-weight: bold;
    text-shadow: 2px 2px 3px black;
    left: max(calc(100px * 8), 100%);
    animation-name: scrollLeft;
    animation-duration: 30s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
  }
  
  .item1 {
    animation-delay: calc(30s / 8 * (8 - 1) * -1);
  }
  
  .item2 {
    animation-delay: calc(30s / 8 * (8 - 2) * -1);
  }
  
  .item3 {
    animation-delay: calc(30s / 8 * (8 - 3) * -1);
  }
  
  .item4 {
    animation-delay: calc(30s / 8 * (8 - 4) * -1);
  }
  
  .item5 {
    animation-delay: calc(30s / 8 * (8 - 5) * -1);
  }
  
  .item6 {
    animation-delay: calc(30s / 8 * (8 - 6) * -1);
  }
  
  .item7 {
    animation-delay: calc(30s / 8 * (8 - 7) * -1);
  }
  
  .item8 {
    animation-delay: calc(30s / 8 * (8 - 8) * -1);
  }

  .photo-wrapper {
    width: 90%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 12px;
    padding: 20px;
    margin-top: 110px;
    margin-bottom: 70px;
  }

  .images {
    width: 30%;
    height: auto;
    border-radius: 3%;
    position: relative; /* Make the image container relative for positioning the pseudo-element */  
    transition: transform 0.2s ease-in-out;
  }
  
  .images:hover {
    transform: scale(1.03);
  }

  .textboxes {
    border: solid rgb(250, 213, 255) 3px;
    position: relative;
    width: 30%;
    padding-bottom: 30%;
    border-radius: 3%;
    position: relative; /* Make the image container relative for positioning the pseudo-element */  
    transition: opacity 0.2s ease-in-out;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    background-color: rgba(250, 213, 255, 0.5);
    overflow: hidden;    
    transition: transform 0.2s ease-in-out;
  }

  .textboxes:hover {
    transform: scale(1.03);
  }

  .text-in-textboxes {
    position: absolute;
    top: 50%; /* Center vertically */  
    left: 50%; /* Center horizontally */  
    transform: translate(-50%, -50%);
    text-align: center;  
    margin: 0;  /* Prevent the text from pushing the div height */  
    display: flex;  
    justify-content: center;  
    align-items: center;  
  }

  